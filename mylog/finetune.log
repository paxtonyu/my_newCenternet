nohup: 忽略输入
Config './configs/my_CenterNet-DLA-BiFPN-P5-CBAM.yaml' has no VERSION. Assuming it to be compatible with latest v2.
Command Line Args: Namespace(config_file='./configs/my_CenterNet-DLA-BiFPN-P5-CBAM.yaml', dist_url='tcp://127.0.0.1:19092', eval_only=False, machine_rank=0, manual_device='0', num_gpus=1, num_machines=1, opts=[], resume=False)
[05/09 19:12:54 detectron2]: Rank of current process: 0. World size: 1
[05/09 19:12:55 detectron2]: Environment info:
-------------------------------  ---------------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.8.16 (default, Mar  2 2023, 03:21:46) [GCC 11.2.0]
numpy                            1.23.5
detectron2                       0.6 @/home/puchyu/projects/detectron2/detectron2
Compiler                         GCC 8.4
CUDA compiler                    CUDA 10.2
detectron2 arch flags            6.1
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          1.10.0 @/home/puchyu/app/miniconda3/envs/center/lib/python3.8/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0                            NVIDIA TITAN Xp (arch=6.1)
Driver version                   470.161.03
CUDA_HOME                        /usr/local/cuda
Pillow                           8.3.2
torchvision                      0.11.0 @/home/puchyu/app/miniconda3/envs/center/lib/python3.8/site-packages/torchvision
torchvision arch flags           3.5, 5.0, 6.0, 7.0, 7.5
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.7.0
-------------------------------  ---------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.2.3 (Git Hash 7336ca9f055cf1bfa13efb658fe15dc9b41f0740)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 10.2
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.5
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=10.2, CUDNN_VERSION=7.6.5, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.10.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

[05/09 19:12:55 detectron2]: Command line arguments: Namespace(config_file='./configs/my_CenterNet-DLA-BiFPN-P5-CBAM.yaml', dist_url='tcp://127.0.0.1:19092', eval_only=False, machine_rank=0, manual_device='0', num_gpus=1, num_machines=1, opts=[], resume=False)
[05/09 19:12:55 detectron2]: Contents of args.config_file=./configs/my_CenterNet-DLA-BiFPN-P5-CBAM.yaml:
MODEL:
  META_ARCHITECTURE: "CenterNetDetector"
  PROPOSAL_GENERATOR:
    NAME: "CenterNet"
  PIXEL_STD: [57.375, 57.120, 58.395]
  BACKBONE:
    NAME: "my_build_p37_dla_bifpn_cbam_backbone"
  BIFPN:
    OUT_CHANNELS: 160
    NUM_LEVELS: 5
    NUM_BIFPN: 3
  DLA:
    NUM_LAYERS: 34
    NORM: "BN"
  FPN:
    IN_FEATURES: ["dla3", "dla4", "dla5"]
  CENTERNET:
    IN_FEATURES: ['p3', 'p4', 'p5']
    FPN_STRIDES: [8, 16, 32]
    SOI: [[0, 64], [48, 192], [128, 1000000]]
    NUM_CLS_CONVS: 1
    NUM_BOX_CONVS: 1
    REG_WEIGHT: 1.
    MORE_POS: True
    HM_FOCAL_ALPHA: 0.25
  WEIGHTS: "./models/CenterNet/my_CenterNet-DLA-BiFPN-P5-CBAM.pth"
DATASETS:
  TRAIN: ("coco_2017_train",)
  TEST: ("coco_2017_val",)
SOLVER:
SOLVER:
  LR_SCHEDULER_NAME: "WarmupCosineLR"
  MAX_ITER: 90000
  BASE_LR: 0.01
  IMS_PER_BATCH: 16
  WEIGHT_DECAY: 0.0001
  CHECKPOINT_PERIOD: 50000
  CLIP_GRADIENTS:
    ENABLED: True
  RESET_ITER: TRUE
INPUT:
  CUSTOM_AUG: EfficientDetResizeCrop
  TRAIN_SIZE: 640
  MIN_SIZE_TEST: 608
  MAX_SIZE_TEST: 900
TEST:
  EVAL_PERIOD: 5000
DATALOADER:
  NUM_WORKERS: 8
OUTPUT_DIR: "./output/MY/finetune/auto"
[05/09 19:12:55 detectron2]: Running with full config:
CUDNN_BENCHMARK: false
DATALOADER:
  ASPECT_RATIO_GROUPING: true
  FILTER_EMPTY_ANNOTATIONS: true
  NUM_WORKERS: 8
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: []
  PROPOSAL_FILES_TRAIN: []
  TEST:
  - coco_2017_val
  TRAIN:
  - coco_2017_train
DEBUG: false
DEBUG_SHOW_NAME: false
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: false
    SIZE:
    - 0.9
    - 0.9
    TYPE: relative_range
  CUSTOM_AUG: EfficientDetResizeCrop
  FORMAT: BGR
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 900
  MAX_SIZE_TRAIN: 1333
  MIN_SIZE_TEST: 608
  MIN_SIZE_TRAIN:
  - 800
  MIN_SIZE_TRAIN_SAMPLING: choice
  NOT_CLAMP_BOX: false
  RANDOM_FLIP: horizontal
  SCALE_RANGE:
  - 0.1
  - 2.0
  TEST_INPUT_TYPE: default
  TEST_SIZE: 640
  TRAIN_SIZE: 640
MODEL:
  ANCHOR_GENERATOR:
    ANGLES:
    - - -90
      - 0
      - 90
    ASPECT_RATIOS:
    - - 0.5
      - 1.0
      - 2.0
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES:
    - - 32
      - 64
      - 128
      - 256
      - 512
  BACKBONE:
    FREEZE_AT: 2
    NAME: my_build_p37_dla_bifpn_cbam_backbone
  BIFPN:
    NORM: GN
    NUM_BIFPN: 3
    NUM_LEVELS: 5
    OUT_CHANNELS: 160
    SEPARABLE_CONV: false
  CENTERNET:
    AS_PROPOSAL: false
    CENTER_NMS: false
    FPN_STRIDES:
    - 8
    - 16
    - 32
    HM_FOCAL_ALPHA: 0.25
    HM_FOCAL_BETA: 4
    HM_MIN_OVERLAP: 0.8
    IGNORE_HIGH_FP: -1.0
    INFERENCE_TH: 0.05
    IN_FEATURES:
    - p3
    - p4
    - p5
    LOC_LOSS_TYPE: giou
    LOSS_GAMMA: 2.0
    MIN_RADIUS: 4
    MORE_POS: true
    MORE_POS_THRESH: 0.2
    MORE_POS_TOPK: 9
    NEG_WEIGHT: 1.0
    NMS_TH_TEST: 0.6
    NMS_TH_TRAIN: 0.6
    NORM: GN
    NOT_NMS: false
    NOT_NORM_REG: true
    NO_REDUCE: false
    NUM_BOX_CONVS: 1
    NUM_CLASSES: 80
    NUM_CLS_CONVS: 1
    NUM_SHARE_CONVS: 0
    ONLY_PROPOSAL: false
    POST_NMS_TOPK_TEST: 100
    POST_NMS_TOPK_TRAIN: 100
    POS_WEIGHT: 1.0
    PRE_NMS_TOPK_TEST: 1000
    PRE_NMS_TOPK_TRAIN: 1000
    PRIOR_PROB: 0.01
    REG_WEIGHT: 1.0
    SIGMOID_CLAMP: 0.0001
    SOI:
    - - 0
      - 64
    - - 48
      - 192
    - - 128
      - 1000000
    USE_DEFORMABLE: false
    WITH_AGN_HM: false
  DEVICE: cuda
  DLA:
    DLAUP_IN_FEATURES:
    - dla3
    - dla4
    - dla5
    DLAUP_NODE: conv
    MS_OUTPUT: false
    NORM: BN
    NUM_LAYERS: 34
    OUT_FEATURES:
    - dla2
    USE_DLA_UP: true
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES:
    - dla3
    - dla4
    - dla5
    NORM: ''
    OUT_CHANNELS: 256
  KEYPOINT_ON: false
  LOAD_PROPOSALS: false
  MASK_ON: false
  META_ARCHITECTURE: CenterNetDetector
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: true
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN:
  - 103.53
  - 116.28
  - 123.675
  PIXEL_STD:
  - 57.375
  - 57.12
  - 58.395
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: CenterNet
  RESNETS:
    DEFORM_MODULATED: false
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE:
    - false
    - false
    - false
    - false
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res4
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: true
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: &id002
    - 1.0
    - 1.0
    - 1.0
    - 1.0
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_THRESH_TEST: 0.5
    NORM: ''
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS:
    - &id001
      - 10.0
      - 10.0
      - 5.0
      - 5.0
    - - 20.0
      - 20.0
      - 10.0
      - 10.0
    - - 30.0
      - 30.0
      - 15.0
      - 15.0
    IOUS:
    - 0.5
    - 0.6
    - 0.7
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id001
    CAT_FREQ_PATH: datasets/lvis/lvis_v1_train_cat_info.json
    CLS_AGNOSTIC_BBOX_REG: false
    CONV_DIM: 256
    EQL_FREQ_CAT: 200
    FC_DIM: 1024
    FED_LOSS_FREQ_WEIGHT: 0.5
    FED_LOSS_FREQ_WEIGHT_POWER: 0.5
    FED_LOSS_NUM_CAT: 50
    FED_LOSS_NUM_CLASSES: 50
    MULT_PROPOSAL_SCORE: false
    NAME: ''
    NORM: ''
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    PRIOR_PROB: 0.01
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: false
    USE_EQL_LOSS: false
    USE_FED_LOSS: false
    USE_SIGMOID_CE: false
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - 1
    IOU_THRESHOLDS:
    - 0.5
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: true
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS:
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: true
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: false
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: ''
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id002
    BOUNDARY_THRESH: -1
    CONV_DIMS:
    - -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.3
    - 0.7
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 4
    CONVS_DIM: 128
    IGNORE_VALUE: 255
    IN_FEATURES:
    - p2
    - p3
    - p4
    - p5
    LOSS_WEIGHT: 1.0
    NAME: SemSegFPNHead
    NORM: GN
    NUM_CLASSES: 54
  WEIGHTS: ./models/CenterNet/my_CenterNet-DLA-BiFPN-P5-CBAM.pth
OUTPUT_DIR: ./output/MY/finetune/my_CenterNet-DLA-BiFPN-P5-CBAM
SAVE_DEBUG: false
SAVE_PTH: false
SEED: -1
SOLVER:
  AMP:
    ENABLED: false
  BASE_LR: 0.01
  BASE_LR_END: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 50000
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: true
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 16
  LR_SCHEDULER_NAME: WarmupCosineLR
  MAX_ITER: 90000
  MOMENTUM: 0.9
  NESTEROV: false
  NUM_DECAYS: 3
  REFERENCE_WORLD_SIZE: 0
  RESCALE_INTERVAL: false
  RESET_ITER: true
  STEPS:
  - 30000
  TRAIN_ITER: -1
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 1000
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: null
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: false
    FLIP: true
    MAX_SIZE: 4000
    MIN_SIZES:
    - 400
    - 500
    - 600
    - 700
    - 800
    - 900
    - 1000
    - 1100
    - 1200
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 5000
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: false
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0
VIS_THRESH: 0.3

[05/09 19:12:55 detectron2]: Full config saved to ./output/MY/finetune/my_CenterNet-DLA-BiFPN-P5-CBAM/config.yaml
[05/09 19:12:55 d2.utils.env]: Using a generated random seed 57027487
Loading pretrained DLA!
[05/09 19:13:00 detectron2]: Model:
CenterNetDetector(
  (backbone): BiFPN_with_CBAM(
    (bottom_up): BackboneWithTopLevels(
      (backbone): DLA(
        (base_layer): Sequential(
          (0): Conv2d(3, 16, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), bias=False)
          (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
        (level0): Sequential(
          (0): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
        (level1): Sequential(
          (0): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
          (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
        (level2): Tree(
          (tree1): BasicBlock(
            (conv1): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (tree2): BasicBlock(
            (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (root): Root(
            (conv): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
          )
          (downsample): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
          (project): Sequential(
            (0): Conv2d(32, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (level3): Tree(
          (tree1): Tree(
            (tree1): BasicBlock(
              (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
              (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (tree2): BasicBlock(
              (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
              (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (root): Root(
              (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (downsample): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
            (project): Sequential(
              (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (tree2): Tree(
            (tree1): BasicBlock(
              (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
              (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (tree2): BasicBlock(
              (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
              (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (root): Root(
              (conv): Conv2d(448, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
          (downsample): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
          (project): Sequential(
            (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (level4): Tree(
          (tree1): Tree(
            (tree1): BasicBlock(
              (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
              (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (tree2): BasicBlock(
              (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
              (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (root): Root(
              (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
            (downsample): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
            (project): Sequential(
              (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (tree2): Tree(
            (tree1): BasicBlock(
              (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
              (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (tree2): BasicBlock(
              (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
              (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (root): Root(
              (conv): Conv2d(896, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (relu): ReLU(inplace=True)
            )
          )
          (downsample): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
          (project): Sequential(
            (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (level5): Tree(
          (tree1): BasicBlock(
            (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (tree2): BasicBlock(
            (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (root): Root(
            (conv): Conv2d(1280, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (relu): ReLU(inplace=True)
          )
          (downsample): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
          (project): Sequential(
            (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
      (dla6): FeatureMapResampler(
        (reduction): Conv2d(
          512, 160, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): GroupNorm(32, 160, eps=1e-05, affine=True)
        )
      )
      (dla7): FeatureMapResampler()
    )
    (repeated_bifpn): ModuleList(
      (0): SingleBiFPN(
        (outputs_f3_3_4): Conv2d(
          160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): GroupNorm(32, 160, eps=1e-05, affine=True)
        )
        (lateral_2_f2): Conv2d(
          512, 160, kernel_size=(1, 1), stride=(1, 1)
          (norm): GroupNorm(32, 160, eps=1e-05, affine=True)
        )
        (outputs_f2_2_5): Conv2d(
          160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): GroupNorm(32, 160, eps=1e-05, affine=True)
        )
        (lateral_1_f1): Conv2d(
          256, 160, kernel_size=(1, 1), stride=(1, 1)
          (norm): GroupNorm(32, 160, eps=1e-05, affine=True)
        )
        (outputs_f1_1_6): Conv2d(
          160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): GroupNorm(32, 160, eps=1e-05, affine=True)
        )
        (lateral_0_f0): Conv2d(
          128, 160, kernel_size=(1, 1), stride=(1, 1)
          (norm): GroupNorm(32, 160, eps=1e-05, affine=True)
        )
        (outputs_f0_0_7): Conv2d(
          160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): GroupNorm(32, 160, eps=1e-05, affine=True)
        )
        (outputs_f1_1_7_8): Conv2d(
          160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): GroupNorm(32, 160, eps=1e-05, affine=True)
        )
        (outputs_f2_2_6_9): Conv2d(
          160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): GroupNorm(32, 160, eps=1e-05, affine=True)
        )
        (outputs_f3_3_5_10): Conv2d(
          160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): GroupNorm(32, 160, eps=1e-05, affine=True)
        )
        (outputs_f4_4_11): Conv2d(
          160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): GroupNorm(32, 160, eps=1e-05, affine=True)
        )
      )
      (1): CBAM(
        (ca): ChannelAttention(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (max_pool): AdaptiveMaxPool2d(output_size=1)
          (shared_MLP): Sequential(
            (0): Conv2d(160, 10, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): ReLU()
            (2): Conv2d(10, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
          )
          (sigmoid): Sigmoid()
        )
        (sa): SpatialAttention(
          (conv1): Conv2d(2, 1, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (2): SingleBiFPN(
        (outputs_f3_3_4): Conv2d(
          160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): GroupNorm(32, 160, eps=1e-05, affine=True)
        )
        (outputs_f2_2_5): Conv2d(
          160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): GroupNorm(32, 160, eps=1e-05, affine=True)
        )
        (outputs_f1_1_6): Conv2d(
          160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): GroupNorm(32, 160, eps=1e-05, affine=True)
        )
        (outputs_f0_0_7): Conv2d(
          160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): GroupNorm(32, 160, eps=1e-05, affine=True)
        )
        (outputs_f1_1_7_8): Conv2d(
          160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): GroupNorm(32, 160, eps=1e-05, affine=True)
        )
        (outputs_f2_2_6_9): Conv2d(
          160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): GroupNorm(32, 160, eps=1e-05, affine=True)
        )
        (outputs_f3_3_5_10): Conv2d(
          160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): GroupNorm(32, 160, eps=1e-05, affine=True)
        )
        (outputs_f4_4_11): Conv2d(
          160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): GroupNorm(32, 160, eps=1e-05, affine=True)
        )
      )
      (3): CBAM(
        (ca): ChannelAttention(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (max_pool): AdaptiveMaxPool2d(output_size=1)
          (shared_MLP): Sequential(
            (0): Conv2d(160, 10, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): ReLU()
            (2): Conv2d(10, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
          )
          (sigmoid): Sigmoid()
        )
        (sa): SpatialAttention(
          (conv1): Conv2d(2, 1, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), bias=False)
          (sigmoid): Sigmoid()
        )
      )
      (4): SingleBiFPN(
        (outputs_f3_3_4): Conv2d(
          160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): GroupNorm(32, 160, eps=1e-05, affine=True)
        )
        (outputs_f2_2_5): Conv2d(
          160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): GroupNorm(32, 160, eps=1e-05, affine=True)
        )
        (outputs_f1_1_6): Conv2d(
          160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): GroupNorm(32, 160, eps=1e-05, affine=True)
        )
        (outputs_f0_0_7): Conv2d(
          160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): GroupNorm(32, 160, eps=1e-05, affine=True)
        )
        (outputs_f1_1_7_8): Conv2d(
          160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): GroupNorm(32, 160, eps=1e-05, affine=True)
        )
        (outputs_f2_2_6_9): Conv2d(
          160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): GroupNorm(32, 160, eps=1e-05, affine=True)
        )
        (outputs_f3_3_5_10): Conv2d(
          160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): GroupNorm(32, 160, eps=1e-05, affine=True)
        )
        (outputs_f4_4_11): Conv2d(
          160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): GroupNorm(32, 160, eps=1e-05, affine=True)
        )
      )
      (5): CBAM(
        (ca): ChannelAttention(
          (avg_pool): AdaptiveAvgPool2d(output_size=1)
          (max_pool): AdaptiveMaxPool2d(output_size=1)
          (shared_MLP): Sequential(
            (0): Conv2d(160, 10, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): ReLU()
            (2): Conv2d(10, 160, kernel_size=(1, 1), stride=(1, 1), bias=False)
          )
          (sigmoid): Sigmoid()
        )
        (sa): SpatialAttention(
          (conv1): Conv2d(2, 1, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), bias=False)
          (sigmoid): Sigmoid()
        )
      )
    )
  )
  (proposal_generator): CenterNet(
    (iou_loss): IOULoss()
    (centernet_head): CenterNetHead(
      (cls_tower): Sequential(
        (0): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): GroupNorm(32, 160, eps=1e-05, affine=True)
        (2): ReLU()
      )
      (bbox_tower): Sequential(
        (0): Conv2d(160, 160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): GroupNorm(32, 160, eps=1e-05, affine=True)
        (2): ReLU()
      )
      (share_tower): Sequential()
      (bbox_pred): Conv2d(160, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (scales): ModuleList(
        (0): Scale()
        (1): Scale()
        (2): Scale()
      )
      (cls_logits): Conv2d(160, 80, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
  )
)
[05/09 19:13:00 d2.checkpoint.detection_checkpoint]: [DetectionCheckpointer] Loading from ./models/CenterNet/my_CenterNet-DLA-BiFPN-P5-CBAM.pth ...
[05/09 19:13:00 fvcore.common.checkpoint]: [Checkpointer] Loading from ./models/CenterNet/my_CenterNet-DLA-BiFPN-P5-CBAM.pth ...
[05/09 19:13:00 detectron2]: Reset loaded iteration. Start training from iteration 0.
[05/09 19:13:00 d2.data.dataset_mapper]: [DatasetMapper] Augmentations used in training: [<centernet.data.transforms.custom_augmentation_impl.EfficientDetResizeCrop object at 0x7f59ee5a0100>, RandomFlip()]
[05/09 19:13:24 d2.data.datasets.coco]: Loading datasets/coco/annotations/instances_train2017.json takes 23.44 seconds.
[05/09 19:13:25 d2.data.datasets.coco]: Loaded 118287 images in COCO format from datasets/coco/annotations/instances_train2017.json
[05/09 19:13:36 d2.data.build]: Removed 1021 images with no usable annotations. 117266 images left.
[05/09 19:13:41 d2.data.build]: Distribution of instances among all 80 categories:
|   category    | #instances   |   category   | #instances   |   category    | #instances   |
|:-------------:|:-------------|:------------:|:-------------|:-------------:|:-------------|
|    person     | 257253       |   bicycle    | 7056         |      car      | 43533        |
|  motorcycle   | 8654         |   airplane   | 5129         |      bus      | 6061         |
|     train     | 4570         |    truck     | 9970         |     boat      | 10576        |
| traffic light | 12842        | fire hydrant | 1865         |   stop sign   | 1983         |
| parking meter | 1283         |    bench     | 9820         |     bird      | 10542        |
|      cat      | 4766         |     dog      | 5500         |     horse     | 6567         |
|     sheep     | 9223         |     cow      | 8014         |   elephant    | 5484         |
|     bear      | 1294         |    zebra     | 5269         |    giraffe    | 5128         |
|   backpack    | 8714         |   umbrella   | 11265        |    handbag    | 12342        |
|      tie      | 6448         |   suitcase   | 6112         |    frisbee    | 2681         |
|     skis      | 6623         |  snowboard   | 2681         |  sports ball  | 6299         |
|     kite      | 8802         | baseball bat | 3273         | baseball gl.. | 3747         |
|  skateboard   | 5536         |  surfboard   | 6095         | tennis racket | 4807         |
|    bottle     | 24070        |  wine glass  | 7839         |      cup      | 20574        |
|     fork      | 5474         |    knife     | 7760         |     spoon     | 6159         |
|     bowl      | 14323        |    banana    | 9195         |     apple     | 5776         |
|   sandwich    | 4356         |    orange    | 6302         |   broccoli    | 7261         |
|    carrot     | 7758         |   hot dog    | 2884         |     pizza     | 5807         |
|     donut     | 7005         |     cake     | 6296         |     chair     | 38073        |
|     couch     | 5779         | potted plant | 8631         |      bed      | 4192         |
| dining table  | 15695        |    toilet    | 4149         |      tv       | 5803         |
|    laptop     | 4960         |    mouse     | 2261         |    remote     | 5700         |
|   keyboard    | 2854         |  cell phone  | 6422         |   microwave   | 1672         |
|     oven      | 3334         |   toaster    | 225          |     sink      | 5609         |
| refrigerator  | 2634         |     book     | 24077        |     clock     | 6320         |
|     vase      | 6577         |   scissors   | 1464         |  teddy bear   | 4729         |
|  hair drier   | 198          |  toothbrush  | 1945         |               |              |
|     total     | 849949       |              |              |               |              |
[05/09 19:13:41 d2.data.build]: Using training sampler TrainingSampler
[05/09 19:13:41 d2.data.common]: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[05/09 19:13:41 d2.data.common]: Serializing 117266 elements to byte tensors and concatenating them all ...
[05/09 19:13:46 d2.data.common]: Serialized dataset takes 451.21 MiB
[05/09 19:13:48 detectron2]: Starting training from iteration 0
[05/09 19:14:26 d2.utils.events]:  eta: 1 day, 18:57:54  iter: 20  total_loss: 0.4241  loss_centernet_pos: 0.1595  loss_centernet_neg: 0.06005  loss_centernet_loc: 0.1999    time: 1.7669  last_time: 1.7322  data_time: 0.1145  last_data_time: 0.0417   lr: 0.00019975  max_mem: 10804M
[05/09 19:14:49 d2.utils.events]:  eta: 1 day, 15:46:08  iter: 40  total_loss: 0.413  loss_centernet_pos: 0.1425  loss_centernet_neg: 0.06079  loss_centernet_loc: 0.2042    time: 1.4073  last_time: 0.9824  data_time: 0.0872  last_data_time: 0.0904   lr: 0.00039949  max_mem: 10804M
[05/09 19:15:10 d2.utils.events]:  eta: 1 day, 0:23:49  iter: 60  total_loss: 0.4296  loss_centernet_pos: 0.1587  loss_centernet_neg: 0.06213  loss_centernet_loc: 0.2014    time: 1.2628  last_time: 0.9760  data_time: 0.0779  last_data_time: 0.0540   lr: 0.00059923  max_mem: 10804M
[05/09 19:15:31 d2.utils.events]:  eta: 1 day, 0:22:24  iter: 80  total_loss: 0.4386  loss_centernet_pos: 0.1574  loss_centernet_neg: 0.06002  loss_centernet_loc: 0.2225    time: 1.1885  last_time: 0.9746  data_time: 0.0802  last_data_time: 0.1034   lr: 0.00079897  max_mem: 10804M
[05/09 19:15:52 d2.utils.events]:  eta: 1 day, 0:22:20  iter: 100  total_loss: 0.4072  loss_centernet_pos: 0.1468  loss_centernet_neg: 0.06027  loss_centernet_loc: 0.2042    time: 1.1461  last_time: 0.9584  data_time: 0.0774  last_data_time: 0.1051   lr: 0.00099871  max_mem: 10804M
[05/09 19:16:13 d2.utils.events]:  eta: 1 day, 0:21:54  iter: 120  total_loss: 0.4425  loss_centernet_pos: 0.1594  loss_centernet_neg: 0.06055  loss_centernet_loc: 0.2167    time: 1.1169  last_time: 0.9650  data_time: 0.0762  last_data_time: 0.0056   lr: 0.0011984  max_mem: 10804M
[05/09 19:16:34 d2.utils.events]:  eta: 1 day, 0:22:03  iter: 140  total_loss: 0.442  loss_centernet_pos: 0.167  loss_centernet_neg: 0.06215  loss_centernet_loc: 0.2138    time: 1.0968  last_time: 0.9797  data_time: 0.0811  last_data_time: 0.1051   lr: 0.0013982  max_mem: 10804M
[05/09 19:16:55 d2.utils.events]:  eta: 1 day, 0:21:41  iter: 160  total_loss: 0.4394  loss_centernet_pos: 0.1653  loss_centernet_neg: 0.06375  loss_centernet_loc: 0.2163    time: 1.0808  last_time: 0.9562  data_time: 0.0794  last_data_time: 0.1220   lr: 0.0015979  max_mem: 10804M
[05/09 19:17:16 d2.utils.events]:  eta: 1 day, 0:21:32  iter: 180  total_loss: 0.4264  loss_centernet_pos: 0.1515  loss_centernet_neg: 0.06115  loss_centernet_loc: 0.2143    time: 1.0698  last_time: 0.9592  data_time: 0.0771  last_data_time: 0.0448   lr: 0.0017977  max_mem: 10804M
[05/09 19:17:37 d2.utils.events]:  eta: 1 day, 0:21:32  iter: 200  total_loss: 0.4437  loss_centernet_pos: 0.1585  loss_centernet_neg: 0.06123  loss_centernet_loc: 0.2172    time: 1.0607  last_time: 0.9705  data_time: 0.0781  last_data_time: 0.2156   lr: 0.0019974  max_mem: 10804M
[05/09 19:17:58 d2.utils.events]:  eta: 1 day, 0:21:38  iter: 220  total_loss: 0.4192  loss_centernet_pos: 0.1565  loss_centernet_neg: 0.06191  loss_centernet_loc: 0.2092    time: 1.0534  last_time: 0.9996  data_time: 0.0700  last_data_time: 0.0328   lr: 0.0021971  max_mem: 10804M
[05/09 19:18:19 d2.utils.events]:  eta: 1 day, 0:21:33  iter: 240  total_loss: 0.4453  loss_centernet_pos: 0.164  loss_centernet_neg: 0.06535  loss_centernet_loc: 0.2218    time: 1.0472  last_time: 0.9813  data_time: 0.0837  last_data_time: 0.0735   lr: 0.0023969  max_mem: 10804M
[05/09 19:18:40 d2.utils.events]:  eta: 1 day, 0:21:31  iter: 260  total_loss: 0.4299  loss_centernet_pos: 0.1635  loss_centernet_neg: 0.05926  loss_centernet_loc: 0.2117    time: 1.0420  last_time: 0.9827  data_time: 0.0758  last_data_time: 0.0285   lr: 0.0025966  max_mem: 10804M
[05/09 19:19:02 d2.utils.events]:  eta: 1 day, 0:21:16  iter: 280  total_loss: 0.4413  loss_centernet_pos: 0.1686  loss_centernet_neg: 0.06182  loss_centernet_loc: 0.2196    time: 1.0372  last_time: 0.9786  data_time: 0.0783  last_data_time: 0.0076   lr: 0.0027964  max_mem: 10804M
[05/09 19:19:23 d2.utils.events]:  eta: 1 day, 0:20:52  iter: 300  total_loss: 0.4269  loss_centernet_pos: 0.1714  loss_centernet_neg: 0.06206  loss_centernet_loc: 0.2076    time: 1.0332  last_time: 0.9709  data_time: 0.0800  last_data_time: 0.0357   lr: 0.0029961  max_mem: 10804M
[05/09 19:19:44 d2.utils.events]:  eta: 1 day, 0:20:33  iter: 320  total_loss: 0.4574  loss_centernet_pos: 0.154  loss_centernet_neg: 0.06429  loss_centernet_loc: 0.2253    time: 1.0300  last_time: 0.9631  data_time: 0.0802  last_data_time: 0.1020   lr: 0.0031958  max_mem: 10804M
[05/09 19:20:05 d2.utils.events]:  eta: 1 day, 0:20:22  iter: 340  total_loss: 0.4639  loss_centernet_pos: 0.1695  loss_centernet_neg: 0.06119  loss_centernet_loc: 0.2178    time: 1.0271  last_time: 0.9755  data_time: 0.0738  last_data_time: 0.0279   lr: 0.0033956  max_mem: 10804M
[05/09 19:20:26 d2.utils.events]:  eta: 1 day, 0:20:20  iter: 360  total_loss: 0.4329  loss_centernet_pos: 0.1657  loss_centernet_neg: 0.05835  loss_centernet_loc: 0.2089    time: 1.0246  last_time: 0.9838  data_time: 0.0830  last_data_time: 0.1163   lr: 0.0035953  max_mem: 10804M
[05/09 19:20:48 d2.utils.events]:  eta: 1 day, 0:20:41  iter: 380  total_loss: 0.4477  loss_centernet_pos: 0.1627  loss_centernet_neg: 0.06661  loss_centernet_loc: 0.2176    time: 1.0230  last_time: 1.0087  data_time: 0.0767  last_data_time: 0.1617   lr: 0.0037951  max_mem: 10804M
[05/09 19:21:09 d2.utils.events]:  eta: 1 day, 0:21:07  iter: 400  total_loss: 0.4733  loss_centernet_pos: 0.1796  loss_centernet_neg: 0.06289  loss_centernet_loc: 0.2344    time: 1.0208  last_time: 0.9792  data_time: 0.0745  last_data_time: 0.1340   lr: 0.0039948  max_mem: 10804M
[05/09 19:21:30 d2.utils.events]:  eta: 1 day, 0:21:25  iter: 420  total_loss: 0.4678  loss_centernet_pos: 0.1711  loss_centernet_neg: 0.06338  loss_centernet_loc: 0.2324    time: 1.0192  last_time: 0.9820  data_time: 0.0833  last_data_time: 0.1310   lr: 0.0041945  max_mem: 10804M
[05/09 19:21:51 d2.utils.events]:  eta: 1 day, 0:21:10  iter: 440  total_loss: 0.4663  loss_centernet_pos: 0.1739  loss_centernet_neg: 0.0634  loss_centernet_loc: 0.2245    time: 1.0177  last_time: 0.9883  data_time: 0.0738  last_data_time: 0.0852   lr: 0.0043943  max_mem: 10804M
[05/09 19:22:12 d2.utils.events]:  eta: 1 day, 0:20:51  iter: 460  total_loss: 0.4566  loss_centernet_pos: 0.1577  loss_centernet_neg: 0.06296  loss_centernet_loc: 0.2274    time: 1.0161  last_time: 0.9858  data_time: 0.0726  last_data_time: 0.0799   lr: 0.004594  max_mem: 10804M
[05/09 19:22:34 d2.utils.events]:  eta: 1 day, 0:21:00  iter: 480  total_loss: 0.4497  loss_centernet_pos: 0.1699  loss_centernet_neg: 0.06468  loss_centernet_loc: 0.221    time: 1.0152  last_time: 0.9752  data_time: 0.0771  last_data_time: 0.0484   lr: 0.0047938  max_mem: 10804M
[05/09 19:22:55 d2.utils.events]:  eta: 1 day, 0:21:05  iter: 500  total_loss: 0.4651  loss_centernet_pos: 0.1751  loss_centernet_neg: 0.05916  loss_centernet_loc: 0.226    time: 1.0141  last_time: 0.9798  data_time: 0.0786  last_data_time: 0.1258   lr: 0.0049935  max_mem: 10804M
[05/09 19:23:16 d2.utils.events]:  eta: 1 day, 0:21:17  iter: 520  total_loss: 0.4948  loss_centernet_pos: 0.1821  loss_centernet_neg: 0.07115  loss_centernet_loc: 0.2252    time: 1.0131  last_time: 1.0056  data_time: 0.0765  last_data_time: 0.0070   lr: 0.0051932  max_mem: 10804M
[05/09 19:23:38 d2.utils.events]:  eta: 1 day, 0:21:19  iter: 540  total_loss: 0.4647  loss_centernet_pos: 0.1733  loss_centernet_neg: 0.06259  loss_centernet_loc: 0.2168    time: 1.0123  last_time: 0.9849  data_time: 0.0776  last_data_time: 0.1081   lr: 0.005393  max_mem: 10804M
[05/09 19:23:59 d2.utils.events]:  eta: 1 day, 0:20:59  iter: 560  total_loss: 0.4562  loss_centernet_pos: 0.1718  loss_centernet_neg: 0.06701  loss_centernet_loc: 0.2169    time: 1.0112  last_time: 0.9589  data_time: 0.0795  last_data_time: 0.0894   lr: 0.0055927  max_mem: 10804M
[05/09 19:24:20 d2.utils.events]:  eta: 1 day, 0:20:53  iter: 580  total_loss: 0.4752  loss_centernet_pos: 0.1816  loss_centernet_neg: 0.06751  loss_centernet_loc: 0.2236    time: 1.0102  last_time: 0.9880  data_time: 0.0688  last_data_time: 0.0264   lr: 0.0057924  max_mem: 10804M
[05/09 19:24:42 d2.utils.events]:  eta: 1 day, 0:20:35  iter: 600  total_loss: 0.4671  loss_centernet_pos: 0.179  loss_centernet_neg: 0.06523  loss_centernet_loc: 0.2189    time: 1.0096  last_time: 0.9789  data_time: 0.0823  last_data_time: 0.1109   lr: 0.0059922  max_mem: 10804M
[05/09 19:25:03 d2.utils.events]:  eta: 1 day, 0:20:26  iter: 620  total_loss: 0.4799  loss_centernet_pos: 0.1882  loss_centernet_neg: 0.06603  loss_centernet_loc: 0.2177    time: 1.0090  last_time: 0.9793  data_time: 0.0741  last_data_time: 0.1381   lr: 0.0061919  max_mem: 10804M
[05/09 19:25:24 d2.utils.events]:  eta: 1 day, 0:20:21  iter: 640  total_loss: 0.5142  loss_centernet_pos: 0.1999  loss_centernet_neg: 0.06341  loss_centernet_loc: 0.2468    time: 1.0081  last_time: 0.9905  data_time: 0.0804  last_data_time: 0.1002   lr: 0.0063917  max_mem: 10804M
[05/09 19:25:46 d2.utils.events]:  eta: 1 day, 0:20:38  iter: 660  total_loss: 0.4849  loss_centernet_pos: 0.1918  loss_centernet_neg: 0.06489  loss_centernet_loc: 0.2341    time: 1.0078  last_time: 1.0025  data_time: 0.0775  last_data_time: 0.1108   lr: 0.0065914  max_mem: 10804M
[05/09 19:26:07 d2.utils.events]:  eta: 1 day, 0:20:37  iter: 680  total_loss: 0.494  loss_centernet_pos: 0.1857  loss_centernet_neg: 0.06492  loss_centernet_loc: 0.2281    time: 1.0069  last_time: 0.9836  data_time: 0.0733  last_data_time: 0.0229   lr: 0.0067911  max_mem: 10804M
[05/09 19:26:28 d2.utils.events]:  eta: 1 day, 0:20:36  iter: 700  total_loss: 0.4803  loss_centernet_pos: 0.1736  loss_centernet_neg: 0.06714  loss_centernet_loc: 0.2324    time: 1.0065  last_time: 0.9821  data_time: 0.0791  last_data_time: 0.0822   lr: 0.0069909  max_mem: 10804M
[05/09 19:26:49 d2.utils.events]:  eta: 1 day, 0:20:16  iter: 720  total_loss: 0.4783  loss_centernet_pos: 0.1883  loss_centernet_neg: 0.06769  loss_centernet_loc: 0.2299    time: 1.0055  last_time: 0.8843  data_time: 0.0733  last_data_time: 0.0033   lr: 0.0071906  max_mem: 10804M
[05/09 19:27:11 d2.utils.events]:  eta: 1 day, 0:20:01  iter: 740  total_loss: 0.4891  loss_centernet_pos: 0.185  loss_centernet_neg: 0.06421  loss_centernet_loc: 0.2371    time: 1.0052  last_time: 0.9904  data_time: 0.0829  last_data_time: 0.0261   lr: 0.0073904  max_mem: 10804M
[05/09 19:27:32 d2.utils.events]:  eta: 1 day, 0:19:41  iter: 760  total_loss: 0.4843  loss_centernet_pos: 0.1921  loss_centernet_neg: 0.06525  loss_centernet_loc: 0.2263    time: 1.0047  last_time: 0.9833  data_time: 0.0761  last_data_time: 0.0253   lr: 0.0075901  max_mem: 10804M
[05/09 19:27:53 d2.utils.events]:  eta: 1 day, 0:19:38  iter: 780  total_loss: 0.4987  loss_centernet_pos: 0.1969  loss_centernet_neg: 0.06727  loss_centernet_loc: 0.2405    time: 1.0044  last_time: 0.9710  data_time: 0.0745  last_data_time: 0.0267   lr: 0.0077898  max_mem: 10804M
[05/09 19:28:14 d2.utils.events]:  eta: 1 day, 0:19:19  iter: 800  total_loss: 0.5096  loss_centernet_pos: 0.2004  loss_centernet_neg: 0.06776  loss_centernet_loc: 0.2421    time: 1.0039  last_time: 0.9861  data_time: 0.0691  last_data_time: 0.0609   lr: 0.0079896  max_mem: 10804M
[05/09 19:28:35 d2.utils.events]:  eta: 1 day, 0:18:57  iter: 820  total_loss: 0.5151  loss_centernet_pos: 0.2076  loss_centernet_neg: 0.07244  loss_centernet_loc: 0.2406    time: 1.0034  last_time: 0.9791  data_time: 0.0758  last_data_time: 0.0776   lr: 0.0081893  max_mem: 10804M
[05/09 19:28:57 d2.utils.events]:  eta: 1 day, 0:18:37  iter: 840  total_loss: 0.5258  loss_centernet_pos: 0.2067  loss_centernet_neg: 0.07024  loss_centernet_loc: 0.2436    time: 1.0030  last_time: 0.9811  data_time: 0.0701  last_data_time: 0.0048   lr: 0.0083891  max_mem: 10804M
[05/09 19:29:16 d2.utils.events]:  eta: 1 day, 0:18:03  iter: 860  total_loss: 0.5052  loss_centernet_pos: 0.199  loss_centernet_neg: 0.06939  loss_centernet_loc: 0.2238    time: 1.0012  last_time: 0.9701  data_time: 0.0676  last_data_time: 0.0348   lr: 0.0085888  max_mem: 10804M
[05/09 19:29:38 d2.utils.events]:  eta: 1 day, 0:17:46  iter: 880  total_loss: 0.5015  loss_centernet_pos: 0.1915  loss_centernet_neg: 0.06607  loss_centernet_loc: 0.2466    time: 1.0008  last_time: 0.9713  data_time: 0.0775  last_data_time: 0.0186   lr: 0.0087885  max_mem: 10804M
[05/09 19:29:59 d2.utils.events]:  eta: 1 day, 0:17:38  iter: 900  total_loss: 0.5229  loss_centernet_pos: 0.2011  loss_centernet_neg: 0.06778  loss_centernet_loc: 0.2426    time: 1.0004  last_time: 0.9732  data_time: 0.0758  last_data_time: 0.1153   lr: 0.0089883  max_mem: 10804M
[05/09 19:30:20 d2.utils.events]:  eta: 1 day, 0:17:19  iter: 920  total_loss: 0.5365  loss_centernet_pos: 0.2182  loss_centernet_neg: 0.06912  loss_centernet_loc: 0.2465    time: 0.9996  last_time: 0.9821  data_time: 0.0753  last_data_time: 0.0902   lr: 0.009188  max_mem: 10804M
[05/09 19:30:41 d2.utils.events]:  eta: 1 day, 0:17:02  iter: 940  total_loss: 0.5251  loss_centernet_pos: 0.2097  loss_centernet_neg: 0.07113  loss_centernet_loc: 0.2375    time: 0.9992  last_time: 0.8757  data_time: 0.0785  last_data_time: 0.1307   lr: 0.0093877  max_mem: 10804M
[05/09 19:31:02 d2.utils.events]:  eta: 1 day, 0:16:57  iter: 960  total_loss: 0.5064  loss_centernet_pos: 0.2002  loss_centernet_neg: 0.06614  loss_centernet_loc: 0.2327    time: 0.9990  last_time: 0.9778  data_time: 0.0684  last_data_time: 0.0342   lr: 0.0095875  max_mem: 10804M
[05/09 19:31:23 d2.utils.events]:  eta: 1 day, 0:16:40  iter: 980  total_loss: 0.4924  loss_centernet_pos: 0.202  loss_centernet_neg: 0.06847  loss_centernet_loc: 0.2403    time: 0.9986  last_time: 0.9569  data_time: 0.0789  last_data_time: 0.0612   lr: 0.0097872  max_mem: 10804M
[05/09 19:31:44 d2.utils.events]:  eta: 1 day, 0:16:20  iter: 1000  total_loss: 0.5208  loss_centernet_pos: 0.2036  loss_centernet_neg: 0.07107  loss_centernet_loc: 0.2504    time: 0.9983  last_time: 0.9841  data_time: 0.0762  last_data_time: 0.0099   lr: 0.009987  max_mem: 10804M
[05/09 19:32:05 d2.utils.events]:  eta: 1 day, 0:15:42  iter: 1020  total_loss: 0.5172  loss_centernet_pos: 0.2061  loss_centernet_neg: 0.06929  loss_centernet_loc: 0.2375    time: 0.9981  last_time: 1.0247  data_time: 0.0721  last_data_time: 0.0731   lr: 0.0099968  max_mem: 10804M
[05/09 19:32:27 d2.utils.events]:  eta: 1 day, 0:15:41  iter: 1040  total_loss: 0.534  loss_centernet_pos: 0.208  loss_centernet_neg: 0.06759  loss_centernet_loc: 0.248    time: 0.9980  last_time: 0.9965  data_time: 0.0710  last_data_time: 0.0271   lr: 0.0099967  max_mem: 10804M
[05/09 19:32:48 d2.utils.events]:  eta: 1 day, 0:15:39  iter: 1060  total_loss: 0.5368  loss_centernet_pos: 0.2088  loss_centernet_neg: 0.06845  loss_centernet_loc: 0.2527    time: 0.9977  last_time: 0.9656  data_time: 0.0655  last_data_time: 0.0910   lr: 0.0099966  max_mem: 10804M
[05/09 19:33:09 d2.utils.events]:  eta: 1 day, 0:15:40  iter: 1080  total_loss: 0.5567  loss_centernet_pos: 0.2132  loss_centernet_neg: 0.06578  loss_centernet_loc: 0.2643    time: 0.9977  last_time: 1.0214  data_time: 0.0740  last_data_time: 0.0059   lr: 0.0099965  max_mem: 10804M
[05/09 19:33:30 d2.utils.events]:  eta: 1 day, 0:16:00  iter: 1100  total_loss: 0.5137  loss_centernet_pos: 0.1961  loss_centernet_neg: 0.07027  loss_centernet_loc: 0.2443    time: 0.9976  last_time: 0.9859  data_time: 0.0655  last_data_time: 0.0413   lr: 0.0099963  max_mem: 10804M
